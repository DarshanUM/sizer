# Generated by Django 3.0.2 on 2020-01-31 12:48

import datetime
from django.db import migrations, models
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='feature_permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.TextField(default='')),
                ('access_level', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HxPerfNumbers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_type', models.CharField(choices=[('M5', 'M5-Server')], max_length=10)),
                ('hypervisor', models.IntegerField(choices=[(0, 'ESXi')], default=None)),
                ('wl_type', models.CharField(choices=[('OLTP/VSI', 'Virtual Server Infrastructure'), ('OLAP', 'On-line Analytical Processing')], max_length=30)),
                ('threshold', models.IntegerField(choices=[(1, 'standard')], default=None)),
                ('node_substring', models.CharField(choices=[('All-Flash', 'HX220|HX240')], max_length=10)),
                ('ssd_string', models.CharField(max_length=30)),
                ('replication_factor', models.CharField(choices=[('RF3', 'three redundant replica')], max_length=10)),
                ('iops_type', models.CharField(choices=[('8K|70% Read|30% Write|100% Random (IOPS)', '8K 70/30 workload (IOPS)'), ('16K|100% Read|100% Write|100% Random (IOPS)', '16K 100% read/write (IOPS)'), ('32K|60% Read|40% Write|100% Random (IOPS)', '32K 60% read 40% write (IOPS)'), ('64K|100% Seq Read (MB/s)', '64K 100% seq read (MB/s)'), ('128K|100% Random (IOPS)', '128K (IOPS)')], max_length=50)),
                ('iops_value', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'hx_perf_numbers',
            },
        ),
        migrations.CreateModel(
            name='LaeUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('sort_index', models.IntegerField(default=5000)),
                ('hercules_avail', models.BooleanField(default=False)),
                ('hx_boost_avail', models.BooleanField(default=False)),
                ('node_json', jsonfield.fields.JSONField(default=dict)),
                ('type', models.CharField(max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('part_json', jsonfield.fields.JSONField(default=dict)),
                ('part_name', models.TextField()),
                ('status', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_json', jsonfield.fields.JSONField(default=dict)),
                ('settings_json', jsonfield.fields.JSONField(default=dict)),
                ('scenario_id', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('name', models.TextField()),
                ('error_json', jsonfield.fields.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Rules',
            fields=[
                ('rule_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rule_json', jsonfield.fields.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('workload_json', jsonfield.fields.JSONField(default=dict)),
                ('workload_result', jsonfield.fields.JSONField(default=dict)),
                ('status', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('settings_json', jsonfield.fields.JSONField(default=dict)),
                ('username', models.TextField()),
                ('sizing_type', models.CharField(choices=[('optimal', 'OPTMIAL NODE SIZING'), ('fixed', 'FIXED NODE SIZING')], max_length=30)),
                ('scen_label', models.CharField(choices=[('general', 'MARK AS GENERAL'), ('archive', 'MOVE TO ARCHIVE'), ('fav', 'MARK AS FAVOURITE')], default='general', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='SharedScenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario_id', models.IntegerField()),
                ('username', models.TextField()),
                ('userid', models.TextField()),
                ('acl', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Thresholds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold_key', models.TextField()),
                ('threshold_value', models.IntegerField()),
                ('threshold_category', models.IntegerField()),
                ('workload_type', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SpecIntData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100)),
                ('speed', models.FloatField(default=0)),
                ('cores', models.IntegerField(default=0)),
                ('blended_core_2006', models.FloatField(default=0)),
                ('blended_core_2017', models.FloatField(default=0)),
                ('is_base_model', models.BooleanField(default=False)),
            ],
            options={
                'unique_together': {('model', 'speed', 'cores')},
            },
        ),
        migrations.CreateModel(
            name='IopsConvFactor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('threshold', models.IntegerField(choices=[(0, 'conservative'), (1, 'standard'), (2, 'aggressive')], default=None)),
                ('iops_conv_factor', models.IntegerField(default=0)),
                ('replication_factor', models.CharField(choices=[('RF2', 'two redundant replica'), ('RF3', 'three redundant replica')], max_length=10)),
                ('workload_type', models.CharField(choices=[('VDI', 'Virtual Desktop Infrastructure'), ('RDSH', 'Remote Desktop Session Host '), ('VSI', 'Virtual Server Infrastructure'), ('OLTP', 'On-line Transaction Processing'), ('OLAP', 'On-line Analytical Processing'), ('OOLTP', 'Oracle On-line Transaction Processing'), ('OOLAP', 'Oracle On-line Analytical Processing'), ('RAW', 'Raw Workload'), ('EXCHANGE_16KB', '16KB IO/s Exchange Server'), ('EXCHANGE_32KB', '32KB IO/s Exchange Server'), ('EXCHANGE_64KB', '64KB IO/s Exchange Server'), ('ROBO', 'Robo workload'), ('SPLUNK', 'Splunk workload'), ('EPIC', 'Epic workload'), ('VEEAM', 'VEEAM workload'), ('VDI_INFRA', 'VDI Infrastructure workload'), ('EDGE', 'EDGE workload'), ('CONTAINER', 'CONTAINER workload'), ('AIML', 'Artificial Intelligence/Machine Learning workload')], max_length=30)),
                ('part_name', models.CharField(max_length=30)),
                ('hypervisor', models.IntegerField(choices=[(0, 'ESXi'), (1, 'Hyper-V')], default=0)),
            ],
            options={
                'unique_together': {('threshold', 'workload_type', 'part_name', 'replication_factor', 'hypervisor')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=100)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('is_superuser', models.IntegerField(default=0)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('is_staff', models.IntegerField(default=0)),
                ('is_active', models.IntegerField(default=1)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('company', models.CharField(default='', max_length=100)),
                ('emp_id', models.CharField(default='', max_length=10)),
                ('accesslevel', models.IntegerField()),
                ('iops_access', models.BooleanField(default=False)),
                ('home_page_desc', models.BooleanField(default=True)),
                ('fixed_sizing_desc', models.BooleanField(default=True)),
                ('optimal_sizing_desc', models.BooleanField(default=True)),
                ('scenario_per_page', models.IntegerField(default=10)),
                ('language', models.CharField(choices=[('english', 'ENGLISH'), ('japanese', 'JAPANESE')], default='english', max_length=50)),
                ('home_disclaimer', models.DateField(default=datetime.date(2001, 1, 1))),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
        ),
    ]
